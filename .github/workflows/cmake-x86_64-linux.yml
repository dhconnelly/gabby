# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: CMake on a single platform

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-24.04

    steps:
    - uses: actions/checkout@v4

    - name: Hugging Face Login
      run: |
        pip install -U "huggingface_hub[cli]"
        huggingface-cli login --token ${{secrets.HF_TOKEN}} --add-to-git-credential 

    - name: Verify HF login
      run: huggingface-cli whoami

    - name: Cache model
      id: cache-hf-llama-3-2-1b-instruct
      uses: actions/cache@v3
      env:
        cache-name: cache-hf-llama-3-2-1b-instruct
      with:
        path: ~/.cache/huggingface/hub/models--meta-llama--Llama-3.2-1B-Instruct
        key: ${{ runner.os }}-build-${{ env.cache-name }}

    - name: Pull model
      run: huggingface-cli download meta-llama/Llama-3.2-1B-Instruct
              
    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -V -C ${{env.BUILD_TYPE}} --rerun-failed --output-on-failure

